name: "CI Tests"
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  code-ql-check:
    name: "StreamFlow CodeQL check"
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
        with:
          config-file: .github/codeql/config.yml
          languages: python
      - uses: github/codeql-action/analyze@v2
  cwl-conformance:
    name: "CWL conformance tests"
    strategy:
      matrix:
        on: [ "ubuntu-22.04" ]
        python: [ "3.8", "3.9", "3.10", "3.11" ]
        version: [ "v1.0", "v1.1", "v1.2" ]
        include:
          - commit: "1c1f122f780075d910fdfdea7e15e46eef3c078d"
            exclude: "docker_entrypoint"
            version: "v1.0"
          - commit: "6397014050177074c9ccd0d771577f7fa9f728a3"
            exclude: "docker_entrypoint,stdin_shorcut,inplace_update_on_file_content"
            version: "v1.1"
          - commit: "ad6f77c648ae9f0eaa2fd53ba7032b0523e12de8"
            exclude: "docker_entrypoint,modify_file_content"
            version: "v1.2"
          - on: "macos-12"
            python: "3.11"
            commit: "ad6f77c648ae9f0eaa2fd53ba7032b0523e12de8"
            exclude: "docker_entrypoint,modify_file_content,step_input_default_value_noexp,step_input_default_value_overriden_noexp,nested_workflow_noexp,step_input_default_value_overriden_2nd_step_noexp,step_input_default_value_overriden_2nd_step_null_noexp"
            version: "v1.2"
    runs-on: ${{ matrix.on }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/setup-node@v3
        with:
          node-version: "15"
      - uses: douglascamata/setup-docker-macos-action@v1-alpha
        if: ${{ startsWith(matrix.on, 'macos-') }}
      - uses: docker/setup-qemu-action@v2
      - name: "Install Streamflow"
        run: |
          python -m pip install . --user
      - name: "Test CWL ${{ matrix.version }} conformance"
        env:
          VERSION: ${{ matrix.version }}
          COMMIT: ${{ matrix.commit }}
          EXCLUDE: ${{ matrix.exclude }}
        run: ./cwl-conformance-test.sh
      - name: "Upload coverage report for conformance tests"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('py{0}-cwl{1}-conformance-tests', matrix.python, matrix.version) }}
          path: ./coverage.xml
          retention-days: 1
          if-no-files-found: error
  static-checks:
    name: "StreamFlow static checks"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        step: [ "bandit", "lint" ]
    env:
      TOXENV: ${{ matrix.step }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            tox.ini
      - name: "Install Python Dependencies and Streamflow"
        run: |
          python -m pip install tox --user
          python -m pip install . --user
      - name: "Run StreamFlow static analysis via Tox"
        run: tox
  unit-tests:
    name: "StreamFlow unit tests"
    strategy:
      matrix:
        on: [ "ubuntu-22.04"]
        python: [ "3.8", "3.9", "3.10", "3.11" ]
        include:
          - on: "macos-12"
            python: "3.11"
    runs-on: ${{ matrix.on }}
    env:
      TOXENV: ${{ format('py{0}-unit', matrix.python) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            tox.ini
      - uses: actions/setup-node@v3
        with:
          node-version: "15"
      - uses: douglascamata/setup-docker-macos-action@v1-alpha
        if: ${{ startsWith(matrix.on, 'macos-') }}
      - uses: docker/setup-qemu-action@v2
      - name: "Install Python Dependencies and Streamflow"
        run: |
          python -m pip install tox --user
          python -m pip install . --user
      - name: "Run StreamFlow tests via Tox"
        run: python -m tox
      - name: "Upload coverage report for unit tests"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('py{0}-unit-tests', matrix.python) }}
          path: ./coverage.xml
          retention-days: 1
          if-no-files-found: error
  upload-to-codecov:
    name: "Codecov report upload"
    needs: ["cwl-conformance", "unit-tests"]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: "Download artifacts"
        uses: actions/download-artifact@v3
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
