{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://streamflow.di.unito.it/schemas/deployment/connector/pbs.json",
  "type": "object",
  "$defs": {
    "service": {
      "type": "object",
      "title": "PBSService",
      "description": "This complex type represents a submission to the PBS queue manager.",
      "properties": {
        "account": {
          "type": "string",
          "title": "Account",
          "description": "Defines the account string associated with the job"
        },
        "additionalAttributes": {
          "type": "object",
          "title": "Additional attributes",
          "description": "Specify additional job attributes",
          "additionalProperties": true
        },
        "begin": {
          "type": "string",
          "title": "Begin time",
          "description": "Declares the time after which the job is eligible for execution"
        },
        "checkpoint": {
          "type": "string",
          "title": "Checkpoint interval",
          "description": "Defines the interval at which the job will be checkpointed"
        },
        "destination": {
          "type": "string",
          "title": "Destination",
          "description": "Defines the destination of the job. The destination names a queue, a server, or a queue at a server"
        },
        "exportAllVariables": {
          "type": "boolean",
          "title": "Export all variables",
          "description": "Declares that all environment variables in the qsub command's environment are to be exported to the batch job"
        },
        "file": {
          "type": "string",
          "title": "File",
          "description": "Path to a file containing a Jinja2 template, describing how the StreamFlow command should be executed in the remote environment"
        },
        "jobName": {
          "type": "string",
          "title": "Job name",
          "description": "Declares a name for the job. The name specified may be up to and including 15 characters in length. It must consist of printable characters with the first character alphabetic"
        },
        "mailOptions": {
          "type": "string",
          "title": "Mail options",
          "description": "Defines the set of conditions under which the execution server will send a mail message about the job"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix",
          "description": "Defines the prefix that declares a directive to the qsub command within the script file"
        },
        "priority": {
          "type": "string",
          "title": "Priority",
          "description": "Defines the priority of the job. The priority argument must be a integer between -1024 and +1023 inclusive"
        },
        "rerunnable": {
          "type": "boolean",
          "title": "Rerunnable",
          "description": "Declares whether the job is rerunable"
        },
        "resources": {
          "type": "object",
          "title": "Resources",
          "description": "Defines the resources that are required by the job and establishes a limit to the amount of resource that can be consumed",
          "additionalProperties": true
        },
        "shellList": {
          "type": "string",
          "title": "Shell list",
          "description": "Declares the shell that interprets the job script"
        },
        "userList": {
          "type": "string",
          "title": "User list",
          "description": "Defines the user name under which the job is to run on the execution system"
        },
        "variableList": {
          "type": "string",
          "title": "Variable list",
          "description": "Expands the list of environment variables that are exported to the job"
        }
      }
    }
  },
  "$ref": "base/queue_manager.json",
  "properties": {
    "services": {
      "type": "object",
      "title": "Services",
      "description": "Map containing named configurations of PBS submissions. Parameters can be either specified as #BSUB directives in a file or directly in YAML format.",
      "patternProperties": {
        "^[a-z][a-zA-Z0-9._-]*$": {
          "$ref": "#/$defs/service"
        }
      }
    }
  },
  "unevaluatedProperties": false
}