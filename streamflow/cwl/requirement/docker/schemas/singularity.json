{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://streamflow.di.unito.it/schemas/cwl/requirement/docker/singularity.json",
  "type": "object",
  "properties": {
    "addCaps": {
      "type": "string",
      "description": "A comma separated capability list to add"
    },
    "allowSetuid": {
      "type": "boolean",
      "description": "Allow setuid binaries in container (root only)"
    },
    "applyCgroups": {
      "type": "string",
      "description": "Apply cgroups from file for container processes (root only)"
    },
    "bind": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "A user-bind path specification, in the format src[:dest[:opts]]"
    },
    "blkioWeight": {
      "type": "integer",
      "description": "Block IO relative weight in range 10-1000, 0 to disable"
    },
    "blkioWeightDevice": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Device specific block IO relative weight"
    },
    "boot": {
      "type": "boolean",
      "description": "Execute /sbin/init to boot container (root only)"
    },
    "cleanenv": {
      "type": "boolean",
      "description": "Clean environment before running container",
      "default": true
    },
    "command": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Command to run when deploying the container"
    },
    "compat": {
      "type": "boolean",
      "description": "Apply settings for increased OCI/Docker compatibility. Infers --containall, --no-init, --no-umask, --no-eval, --writable-tmpfs."
    },
    "contain": {
      "type": "boolean",
      "description": "Use minimal /dev and empty other directories (e.g. /tmp and $HOME) instead of sharing filesystems from your host",
      "default": true
    },
    "containall": {
      "type": "boolean",
      "description": "Contain not only file systems, but also PID, IPC, and environment"
    },
    "cpuShares": {
      "type": "integer",
      "description": "CPU shares for container (default -1)"
    },
    "cpus": {
      "type": "string",
      "description": "Number of CPUs available to container"
    },
    "cpusetCpus": {
      "type": "string",
      "description": "List of host CPUs available to container"
    },
    "cpusetMems": {
      "type": "string",
      "description": "List of host memory nodes available to container"
    },
    "disableCache": {
      "type": "boolean",
      "description": "Don't use cache and don't create cache"
    },
    "dns": {
      "type": "string",
      "description": "List of DNS server separated by commas to add in resolv.conf"
    },
    "dockerHost": {
      "type": "string",
      "description": "Specify a custom Docker daemon host"
    },
    "dropCaps": {
      "type": "string",
      "description": "A comma separated capability list to drop"
    },
    "env": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "Pass environment variable to contained process"
    },
    "envFile": {
      "type": "string",
      "description": "Pass environment variables from file to contained process"
    },
    "fakeroot": {
      "type": "boolean",
      "description": "Run container in new user namespace as uid 0"
    },
    "fusemount": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "A FUSE filesystem mount specification of the form '<type>:<fuse command> <mountpoint>'"
    },
    "home": {
      "type": "string",
      "description": "A home directory specification, in the format src[:dest]",
      "default": "$HOME"
    },
    "hostname": {
      "type": "string",
      "description": "Set container hostname"
    },
    "ipc": {
      "type": "boolean",
      "description": "Run container in a new IPC namespace"
    },
    "keepPrivs": {
      "type": "boolean",
      "description": "Let root user keep privileges in container (root only)"
    },
    "memory": {
      "type": "string",
      "description": "Memory limit in bytes"
    },
    "memoryReservation": {
      "type": "string",
      "description": "Memory soft limit in bytes"
    },
    "memorySwap": {
      "type": "string",
      "description": "Swap limit, use -1 for unlimited swap"
    },
    "mount": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "A mount specification (e.g., type=bind,source=/opt,destination=/hostopt)"
    },
    "net": {
      "type": "boolean",
      "description": "Run container in a new network namespace (sets up a bridge network interface by default)"
    },
    "network": {
      "type": "string",
      "description": "Specify desired network type separated by commas, each network will bring up a dedicated interface inside container",
      "default": "bridge"
    },
    "networkArgs": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "Specify network arguments to pass to CNI plugins"
    },
    "noEval": {
      "type": "boolean",
      "description": "Do not shell evaluate env vars or OCI container CMD/ENTRYPOINT/ARGS"
    },
    "noHome": {
      "type": "boolean",
      "description": "Do not mount users home directory if /home is not the current working directory"
    },
    "noHttps": {
      "type": "boolean",
      "description": "Use HTTP instead of HTTPS for docker:// oras:// and library://<hostname>/... URIs"
    },
    "noInit": {
      "type": "boolean",
      "description": "Do not start shim processes with --pid"
    },
    "noMount": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "Disable one or more mount xxx options set in singularity.conf"
    },
    "noPrivs": {
      "type": "boolean",
      "description": "Drop all privileges from root user in container"
    },
    "noUmask": {
      "type": "boolean",
      "description": "Do not propagate umask to the container. Set default 0022 umask"
    },
    "nv": {
      "type": "boolean",
      "description": "Enable experimental NVIDIA support"
    },
    "nvccli": {
      "type": "boolean",
      "description": "Use nvidia-container-cli for GPU setup"
    },
    "oomKillDisable": {
      "type": "boolean",
      "description": "Disable OOM killer"
    },
    "overlay": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "Use an overlayFS image for persistent data storage or as read-only layer of container"
    },
    "pemPath": {
      "type": "string",
      "description": "Enter a path to a PEM formatted RSA key for an encrypted container"
    },
    "pidFile": {
      "type": "string",
      "description": "Write instance PID to the file with the given name"
    },
    "pidsLimit": {
      "type": "integer",
      "description": "Limit number of container PIDs, use -1 for unlimited"
    },
    "replicas": {
      "type": "integer",
      "description": "Number of instances to be co-allocated",
      "default": 1
    },
    "locationsCacheSize": {
      "type": "integer",
      "description": "Available locations cache size",
      "default": 10
    },
    "locationsCacheTTL": {
      "type": "integer",
      "description": "Available locations cache TTL (in seconds). When such cache expires, the connector performs a new request to check locations availability",
      "default": 10
    },
    "rocm": {
      "type": "boolean",
      "description": "Enable experimental ROCM support"
    },
    "scratch": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "Include a scratch directory within the container that is linked to a temporary dir"
    },
    "security": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "description": "Enable security features (SELinux, Apparmor, Seccomp)"
    },
    "transferBufferSize": {
      "type": "integer",
      "description": "Buffer size allocated for local and remote data transfers",
      "default": "64kiB"
    },
    "userns": {
      "type": "boolean",
      "description": "Run container in a new user namespace, allowing Singularity to run completely unprivileged on recent kernels. This disables some features of Singularity, for example it only works with sandbox images"
    },
    "uts": {
      "type": "boolean",
      "description": "Run container in a new UTS namespace"
    },
    "workdir": {
      "type": "string",
      "description": "Working directory to be used for /tmp, /var/tmp and $HOME (if --contain was also used)"
    },
    "writable": {
      "type": "boolean",
      "description": "By default all Singularity containers are available as read only. This option makes the file system accessible as read/write"
    },
    "writableTmpfs": {
      "type": "boolean",
      "description": "Makes the file system accessible as read/write with non persistent data (with overlay support only)"
    }
  },
  "additionalProperties": false
}