# Generated from ECMAScript.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,103,926,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
        2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,
        7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,
        2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,2,125,
        7,125,2,126,7,126,2,127,7,127,2,128,7,128,2,129,7,129,2,130,7,130,
        1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,
        1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,
        1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,
        1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
        1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,
        1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,
        1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,
        1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,
        1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,
        1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,
        1,51,1,51,1,51,3,51,415,8,51,1,52,1,52,1,52,5,52,420,8,52,10,52,
        12,52,423,9,52,1,52,3,52,426,8,52,1,52,1,52,4,52,430,8,52,11,52,
        12,52,431,1,52,3,52,435,8,52,1,52,1,52,3,52,439,8,52,3,52,441,8,
        52,1,53,1,53,1,53,4,53,446,8,53,11,53,12,53,447,1,54,1,54,1,54,4,
        54,453,8,54,11,54,12,54,454,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,
        56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,
        58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,60,1,
        60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,63,1,
        63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,
        65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,67,1,
        67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,69,1,
        69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,
        71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,
        72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,
        74,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,
        77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,
        79,1,79,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,82,1,
        82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,
        84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,
        86,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,88,1,
        88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,89,1,89,1,
        89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,91,1,
        91,1,91,1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,
        92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,
        93,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,
        95,1,95,1,95,1,95,1,95,1,95,1,95,1,96,1,96,1,96,1,96,1,96,1,96,1,
        96,1,97,1,97,5,97,740,8,97,10,97,12,97,743,9,97,1,98,1,98,5,98,747,
        8,98,10,98,12,98,750,9,98,1,98,1,98,1,98,5,98,755,8,98,10,98,12,
        98,758,9,98,1,98,3,98,761,8,98,1,99,4,99,764,8,99,11,99,12,99,765,
        1,99,1,99,1,100,1,100,1,100,1,100,5,100,774,8,100,10,100,12,100,
        777,9,100,1,100,1,100,1,100,1,100,1,100,1,101,1,101,1,101,1,101,
        5,101,788,8,101,10,101,12,101,791,9,101,1,101,1,101,1,102,1,102,
        1,103,1,103,1,103,1,103,3,103,801,8,103,1,104,1,104,1,104,1,104,
        3,104,807,8,104,1,105,1,105,1,105,1,105,3,105,813,8,105,1,106,1,
        106,3,106,817,8,106,1,107,1,107,1,107,1,107,1,108,1,108,1,108,1,
        108,1,108,1,108,1,109,1,109,1,110,1,110,1,111,1,111,1,111,3,111,
        836,8,111,1,112,1,112,1,112,1,113,1,113,1,113,3,113,844,8,113,1,
        114,1,114,1,115,1,115,1,116,1,116,1,117,1,117,1,117,5,117,855,8,
        117,10,117,12,117,858,9,117,3,117,860,8,117,1,118,1,118,3,118,864,
        8,118,1,118,4,118,867,8,118,11,118,12,118,868,1,119,1,119,1,119,
        3,119,874,8,119,1,120,1,120,1,120,1,120,3,120,880,8,120,1,121,1,
        121,1,122,1,122,1,123,1,123,5,123,888,8,123,10,123,12,123,891,9,
        123,1,124,5,124,894,8,124,10,124,12,124,897,9,124,1,125,1,125,1,
        125,3,125,902,8,125,1,126,1,126,1,126,3,126,907,8,126,1,127,1,127,
        1,128,1,128,1,128,1,129,1,129,5,129,916,8,129,10,129,12,129,919,
        9,129,1,129,1,129,1,130,1,130,3,130,925,8,130,1,775,0,131,1,1,3,
        2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
        51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
        73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,
        95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
        57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,
        133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,
        76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,
        171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,
        95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,205,103,207,
        0,209,0,211,0,213,0,215,0,217,0,219,0,221,0,223,0,225,0,227,0,229,
        0,231,0,233,0,235,0,237,0,239,0,241,0,243,0,245,0,247,0,249,0,251,
        0,253,0,255,0,257,0,259,0,261,0,1,0,19,3,0,10,10,13,13,8232,8233,
        2,0,88,88,120,120,4,0,9,9,11,12,32,32,160,160,4,0,10,10,13,13,34,
        34,92,92,4,0,10,10,13,13,39,39,92,92,9,0,34,34,39,39,92,92,98,98,
        102,102,110,110,114,114,116,116,118,118,12,0,10,10,13,13,34,34,39,
        39,48,57,92,92,98,98,102,102,110,110,114,114,116,118,120,120,2,0,
        117,117,120,120,1,0,48,57,3,0,48,57,65,70,97,102,1,0,48,55,1,0,49,
        57,2,0,69,69,101,101,2,0,43,43,45,45,661,0,36,36,65,90,95,95,97,
        122,170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,
        740,748,748,750,750,880,884,886,887,890,893,895,895,902,902,904,
        906,908,908,910,929,931,1013,1015,1153,1162,1327,1329,1366,1369,
        1369,1376,1416,1488,1514,1519,1522,1568,1610,1646,1647,1649,1747,
        1749,1749,1765,1766,1774,1775,1786,1788,1791,1791,1808,1808,1810,
        1839,1869,1957,1969,1969,1994,2026,2036,2037,2042,2042,2048,2069,
        2074,2074,2084,2084,2088,2088,2112,2136,2144,2154,2160,2183,2185,
        2190,2208,2249,2308,2361,2365,2365,2384,2384,2392,2401,2417,2432,
        2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2493,
        2493,2510,2510,2524,2525,2527,2529,2544,2545,2556,2556,2565,2570,
        2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,
        2652,2654,2654,2674,2676,2693,2701,2703,2705,2707,2728,2730,2736,
        2738,2739,2741,2745,2749,2749,2768,2768,2784,2785,2809,2809,2821,
        2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2877,2877,
        2908,2909,2911,2913,2929,2929,2947,2947,2949,2954,2958,2960,2962,
        2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,
        3024,3024,3077,3084,3086,3088,3090,3112,3114,3129,3133,3133,3160,
        3162,3165,3165,3168,3169,3200,3200,3205,3212,3214,3216,3218,3240,
        3242,3251,3253,3257,3261,3261,3293,3294,3296,3297,3313,3314,3332,
        3340,3342,3344,3346,3386,3389,3389,3406,3406,3412,3414,3423,3425,
        3450,3455,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,
        3632,3634,3635,3648,3654,3713,3714,3716,3716,3718,3722,3724,3747,
        3749,3749,3751,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,
        3807,3840,3840,3904,3911,3913,3948,3976,3980,4096,4138,4159,4159,
        4176,4181,4186,4189,4193,4193,4197,4198,4206,4208,4213,4225,4238,
        4238,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,
        4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,
        4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,
        4888,4954,4992,5007,5024,5109,5112,5117,5121,5740,5743,5759,5761,
        5786,5792,5866,5873,5880,5888,5905,5919,5937,5952,5969,5984,5996,
        5998,6000,6016,6067,6103,6103,6108,6108,6176,6264,6272,6276,6279,
        6312,6314,6314,6320,6389,6400,6430,6480,6509,6512,6516,6528,6571,
        6576,6601,6656,6678,6688,6740,6823,6823,6917,6963,6981,6988,7043,
        7072,7086,7087,7098,7141,7168,7203,7245,7247,7258,7293,7296,7304,
        7312,7354,7357,7359,7401,7404,7406,7411,7413,7414,7418,7418,7424,
        7615,7680,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,
        8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,
        8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,
        8305,8305,8319,8319,8336,8348,8450,8450,8455,8455,8458,8467,8469,
        8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,
        8508,8511,8517,8521,8526,8526,8579,8580,11264,11492,11499,11502,
        11506,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,
        11631,11648,11670,11680,11686,11688,11694,11696,11702,11704,11710,
        11712,11718,11720,11726,11728,11734,11736,11742,11823,11823,12293,
        12294,12337,12341,12347,12348,12353,12438,12445,12447,12449,12538,
        12540,12543,12549,12591,12593,12686,12704,12735,12784,12799,13312,
        19903,19968,42124,42192,42237,42240,42508,42512,42527,42538,42539,
        42560,42606,42623,42653,42656,42725,42775,42783,42786,42888,42891,
        42954,42960,42961,42963,42963,42965,42969,42994,43009,43011,43013,
        43015,43018,43020,43042,43072,43123,43138,43187,43250,43255,43259,
        43259,43261,43262,43274,43301,43312,43334,43360,43388,43396,43442,
        43471,43471,43488,43492,43494,43503,43514,43518,43520,43560,43584,
        43586,43588,43595,43616,43638,43642,43642,43646,43695,43697,43697,
        43701,43702,43705,43709,43712,43712,43714,43714,43739,43741,43744,
        43754,43762,43764,43777,43782,43785,43790,43793,43798,43808,43814,
        43816,43822,43824,43866,43868,43881,43888,44002,44032,55203,55216,
        55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,
        64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,
        64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,
        65008,65019,65136,65140,65142,65276,65313,65338,65345,65370,65382,
        65470,65474,65479,65482,65487,65490,65495,65498,65500,65536,65547,
        65549,65574,65576,65594,65596,65597,65599,65613,65616,65629,65664,
        65786,66176,66204,66208,66256,66304,66335,66349,66368,66370,66377,
        66384,66421,66432,66461,66464,66499,66504,66511,66560,66717,66736,
        66771,66776,66811,66816,66855,66864,66915,66928,66938,66940,66954,
        66956,66962,66964,66965,66967,66977,66979,66993,66995,67001,67003,
        67004,67072,67382,67392,67413,67424,67431,67456,67461,67463,67504,
        67506,67514,67584,67589,67592,67592,67594,67637,67639,67640,67644,
        67644,67647,67669,67680,67702,67712,67742,67808,67826,67828,67829,
        67840,67861,67872,67897,67968,68023,68030,68031,68096,68096,68112,
        68115,68117,68119,68121,68149,68192,68220,68224,68252,68288,68295,
        68297,68324,68352,68405,68416,68437,68448,68466,68480,68497,68608,
        68680,68736,68786,68800,68850,68864,68899,69248,69289,69296,69297,
        69376,69404,69415,69415,69424,69445,69488,69505,69552,69572,69600,
        69622,69635,69687,69745,69746,69749,69749,69763,69807,69840,69864,
        69891,69926,69956,69956,69959,69959,69968,70002,70006,70006,70019,
        70066,70081,70084,70106,70106,70108,70108,70144,70161,70163,70187,
        70207,70208,70272,70278,70280,70280,70282,70285,70287,70301,70303,
        70312,70320,70366,70405,70412,70415,70416,70419,70440,70442,70448,
        70450,70451,70453,70457,70461,70461,70480,70480,70493,70497,70656,
        70708,70727,70730,70751,70753,70784,70831,70852,70853,70855,70855,
        71040,71086,71128,71131,71168,71215,71236,71236,71296,71338,71352,
        71352,71424,71450,71488,71494,71680,71723,71840,71903,71935,71942,
        71945,71945,71948,71955,71957,71958,71960,71983,71999,71999,72001,
        72001,72096,72103,72106,72144,72161,72161,72163,72163,72192,72192,
        72203,72242,72250,72250,72272,72272,72284,72329,72349,72349,72368,
        72440,72704,72712,72714,72750,72768,72768,72818,72847,72960,72966,
        72968,72969,72971,73008,73030,73030,73056,73061,73063,73064,73066,
        73097,73112,73112,73440,73458,73474,73474,73476,73488,73490,73523,
        73648,73648,73728,74649,74880,75075,77712,77808,77824,78895,78913,
        78918,82944,83526,92160,92728,92736,92766,92784,92862,92880,92909,
        92928,92975,92992,92995,93027,93047,93053,93071,93760,93823,93952,
        94026,94032,94032,94099,94111,94176,94177,94179,94179,94208,100343,
        100352,101589,101632,101640,110576,110579,110581,110587,110589,110590,
        110592,110882,110898,110898,110928,110930,110933,110933,110948,110951,
        110960,111355,113664,113770,113776,113788,113792,113800,113808,113817,
        119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,
        119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,
        120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,
        120128,120132,120134,120134,120138,120144,120146,120485,120488,120512,
        120514,120538,120540,120570,120572,120596,120598,120628,120630,120654,
        120656,120686,120688,120712,120714,120744,120746,120770,120772,120779,
        122624,122654,122661,122666,122928,122989,123136,123180,123191,123197,
        123214,123214,123536,123565,123584,123627,124112,124139,124896,124902,
        124904,124907,124909,124910,124912,124926,124928,125124,125184,125251,
        125259,125259,126464,126467,126469,126495,126497,126498,126500,126500,
        126503,126503,126505,126514,126516,126519,126521,126521,126523,126523,
        126530,126530,126535,126535,126537,126537,126539,126539,126541,126543,
        126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,
        126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,
        126572,126578,126580,126583,126585,126588,126590,126590,126592,126601,
        126603,126619,126625,126627,126629,126633,126635,126651,131072,173791,
        173824,177977,177984,178205,178208,183969,183984,191456,194560,195101,
        196608,201546,201552,205743,407,0,48,57,95,95,768,879,1155,1159,
        1425,1469,1471,1471,1473,1474,1476,1477,1479,1479,1552,1562,1611,
        1641,1648,1648,1750,1756,1759,1764,1767,1768,1770,1773,1776,1785,
        1809,1809,1840,1866,1958,1968,1984,1993,2027,2035,2045,2045,2070,
        2073,2075,2083,2085,2087,2089,2093,2137,2139,2200,2207,2250,2273,
        2275,2306,2362,2362,2364,2364,2369,2376,2381,2381,2385,2391,2402,
        2403,2406,2415,2433,2433,2492,2492,2497,2500,2509,2509,2530,2531,
        2534,2543,2558,2558,2561,2562,2620,2620,2625,2626,2631,2632,2635,
        2637,2641,2641,2662,2673,2677,2677,2689,2690,2748,2748,2753,2757,
        2759,2760,2765,2765,2786,2787,2790,2799,2810,2815,2817,2817,2876,
        2876,2879,2879,2881,2884,2893,2893,2901,2902,2914,2915,2918,2927,
        2946,2946,3008,3008,3021,3021,3046,3055,3072,3072,3076,3076,3132,
        3132,3134,3136,3142,3144,3146,3149,3157,3158,3170,3171,3174,3183,
        3201,3201,3260,3260,3263,3263,3270,3270,3276,3277,3298,3299,3302,
        3311,3328,3329,3387,3388,3393,3396,3405,3405,3426,3427,3430,3439,
        3457,3457,3530,3530,3538,3540,3542,3542,3558,3567,3633,3633,3636,
        3642,3655,3662,3664,3673,3761,3761,3764,3772,3784,3790,3792,3801,
        3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3953,3966,3968,
        3972,3974,3975,3981,3991,3993,4028,4038,4038,4141,4144,4146,4151,
        4153,4154,4157,4158,4160,4169,4184,4185,4190,4192,4209,4212,4226,
        4226,4229,4230,4237,4237,4240,4249,4253,4253,4957,4959,5906,5908,
        5938,5939,5970,5971,6002,6003,6068,6069,6071,6077,6086,6086,6089,
        6099,6109,6109,6112,6121,6155,6157,6159,6169,6277,6278,6313,6313,
        6432,6434,6439,6440,6450,6450,6457,6459,6470,6479,6608,6617,6679,
        6680,6683,6683,6742,6742,6744,6750,6752,6752,6754,6754,6757,6764,
        6771,6780,6783,6793,6800,6809,6832,6845,6847,6862,6912,6915,6964,
        6964,6966,6970,6972,6972,6978,6978,6992,7001,7019,7027,7040,7041,
        7074,7077,7080,7081,7083,7085,7088,7097,7142,7142,7144,7145,7149,
        7149,7151,7153,7212,7219,7222,7223,7232,7241,7248,7257,7376,7378,
        7380,7392,7394,7400,7405,7405,7412,7412,7416,7417,7616,7679,8255,
        8256,8276,8276,8400,8412,8417,8417,8421,8432,11503,11505,11647,11647,
        11744,11775,12330,12333,12441,12442,42528,42537,42607,42607,42612,
        42621,42654,42655,42736,42737,43010,43010,43014,43014,43019,43019,
        43045,43046,43052,43052,43204,43205,43216,43225,43232,43249,43263,
        43273,43302,43309,43335,43345,43392,43394,43443,43443,43446,43449,
        43452,43453,43472,43481,43493,43493,43504,43513,43561,43566,43569,
        43570,43573,43574,43587,43587,43596,43596,43600,43609,43644,43644,
        43696,43696,43698,43700,43703,43704,43710,43711,43713,43713,43756,
        43757,43766,43766,44005,44005,44008,44008,44013,44013,44016,44025,
        64286,64286,65024,65039,65056,65071,65075,65076,65101,65103,65296,
        65305,65343,65343,66045,66045,66272,66272,66422,66426,66720,66729,
        68097,68099,68101,68102,68108,68111,68152,68154,68159,68159,68325,
        68326,68900,68903,68912,68921,69291,69292,69373,69375,69446,69456,
        69506,69509,69633,69633,69688,69702,69734,69744,69747,69748,69759,
        69761,69811,69814,69817,69818,69826,69826,69872,69881,69888,69890,
        69927,69931,69933,69940,69942,69951,70003,70003,70016,70017,70070,
        70078,70089,70092,70095,70105,70191,70193,70196,70196,70198,70199,
        70206,70206,70209,70209,70367,70367,70371,70378,70384,70393,70400,
        70401,70459,70460,70464,70464,70502,70508,70512,70516,70712,70719,
        70722,70724,70726,70726,70736,70745,70750,70750,70835,70840,70842,
        70842,70847,70848,70850,70851,70864,70873,71090,71093,71100,71101,
        71103,71104,71132,71133,71219,71226,71229,71229,71231,71232,71248,
        71257,71339,71339,71341,71341,71344,71349,71351,71351,71360,71369,
        71453,71455,71458,71461,71463,71467,71472,71481,71727,71735,71737,
        71738,71904,71913,71995,71996,71998,71998,72003,72003,72016,72025,
        72148,72151,72154,72155,72160,72160,72193,72202,72243,72248,72251,
        72254,72263,72263,72273,72278,72281,72283,72330,72342,72344,72345,
        72752,72758,72760,72765,72767,72767,72784,72793,72850,72871,72874,
        72880,72882,72883,72885,72886,73009,73014,73018,73018,73020,73021,
        73023,73029,73031,73031,73040,73049,73104,73105,73109,73109,73111,
        73111,73120,73129,73459,73460,73472,73473,73526,73530,73536,73536,
        73538,73538,73552,73561,78912,78912,78919,78933,92768,92777,92864,
        92873,92912,92916,92976,92982,93008,93017,94031,94031,94095,94098,
        94180,94180,113821,113822,118528,118573,118576,118598,119143,119145,
        119163,119170,119173,119179,119210,119213,119362,119364,120782,120831,
        121344,121398,121403,121452,121461,121461,121476,121476,121499,121503,
        121505,121519,122880,122886,122888,122904,122907,122913,122915,122916,
        122918,122922,123023,123023,123184,123190,123200,123209,123566,123566,
        123628,123641,124140,124153,125136,125142,125252,125258,125264,125273,
        130032,130041,917760,917999,6,0,10,10,13,13,42,42,47,47,91,92,8232,
        8233,5,0,10,10,13,13,47,47,91,92,8232,8233,4,0,10,10,13,13,92,93,
        8232,8233,941,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
        9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
        19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,
        29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,
        39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
        49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
        59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,
        69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,
        79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,
        89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,
        99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,
        0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,
        1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,
        0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,
        0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,
        145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,
        0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,
        1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,
        0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,
        0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,
        191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,
        0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,1,263,1,0,0,0,3,269,
        1,0,0,0,5,273,1,0,0,0,7,275,1,0,0,0,9,277,1,0,0,0,11,279,1,0,0,0,
        13,281,1,0,0,0,15,283,1,0,0,0,17,285,1,0,0,0,19,287,1,0,0,0,21,289,
        1,0,0,0,23,291,1,0,0,0,25,293,1,0,0,0,27,295,1,0,0,0,29,297,1,0,
        0,0,31,300,1,0,0,0,33,303,1,0,0,0,35,305,1,0,0,0,37,307,1,0,0,0,
        39,309,1,0,0,0,41,311,1,0,0,0,43,313,1,0,0,0,45,315,1,0,0,0,47,317,
        1,0,0,0,49,320,1,0,0,0,51,323,1,0,0,0,53,327,1,0,0,0,55,329,1,0,
        0,0,57,331,1,0,0,0,59,334,1,0,0,0,61,337,1,0,0,0,63,340,1,0,0,0,
        65,343,1,0,0,0,67,347,1,0,0,0,69,351,1,0,0,0,71,353,1,0,0,0,73,355,
        1,0,0,0,75,357,1,0,0,0,77,360,1,0,0,0,79,363,1,0,0,0,81,366,1,0,
        0,0,83,369,1,0,0,0,85,372,1,0,0,0,87,375,1,0,0,0,89,378,1,0,0,0,
        91,382,1,0,0,0,93,386,1,0,0,0,95,391,1,0,0,0,97,394,1,0,0,0,99,397,
        1,0,0,0,101,400,1,0,0,0,103,414,1,0,0,0,105,440,1,0,0,0,107,442,
        1,0,0,0,109,449,1,0,0,0,111,456,1,0,0,0,113,462,1,0,0,0,115,465,
        1,0,0,0,117,476,1,0,0,0,119,483,1,0,0,0,121,488,1,0,0,0,123,493,
        1,0,0,0,125,497,1,0,0,0,127,501,1,0,0,0,129,507,1,0,0,0,131,515,
        1,0,0,0,133,522,1,0,0,0,135,527,1,0,0,0,137,536,1,0,0,0,139,540,
        1,0,0,0,141,547,1,0,0,0,143,553,1,0,0,0,145,562,1,0,0,0,147,571,
        1,0,0,0,149,576,1,0,0,0,151,581,1,0,0,0,153,589,1,0,0,0,155,592,
        1,0,0,0,157,598,1,0,0,0,159,605,1,0,0,0,161,608,1,0,0,0,163,612,
        1,0,0,0,165,618,1,0,0,0,167,623,1,0,0,0,169,631,1,0,0,0,171,637,
        1,0,0,0,173,643,1,0,0,0,175,650,1,0,0,0,177,657,1,0,0,0,179,669,
        1,0,0,0,181,674,1,0,0,0,183,683,1,0,0,0,185,691,1,0,0,0,187,702,
        1,0,0,0,189,711,1,0,0,0,191,722,1,0,0,0,193,730,1,0,0,0,195,737,
        1,0,0,0,197,760,1,0,0,0,199,763,1,0,0,0,201,769,1,0,0,0,203,783,
        1,0,0,0,205,794,1,0,0,0,207,800,1,0,0,0,209,806,1,0,0,0,211,812,
        1,0,0,0,213,816,1,0,0,0,215,818,1,0,0,0,217,822,1,0,0,0,219,828,
        1,0,0,0,221,830,1,0,0,0,223,835,1,0,0,0,225,837,1,0,0,0,227,843,
        1,0,0,0,229,845,1,0,0,0,231,847,1,0,0,0,233,849,1,0,0,0,235,859,
        1,0,0,0,237,861,1,0,0,0,239,873,1,0,0,0,241,879,1,0,0,0,243,881,
        1,0,0,0,245,883,1,0,0,0,247,885,1,0,0,0,249,895,1,0,0,0,251,901,
        1,0,0,0,253,906,1,0,0,0,255,908,1,0,0,0,257,910,1,0,0,0,259,913,
        1,0,0,0,261,924,1,0,0,0,263,264,4,0,0,0,264,265,5,47,0,0,265,266,
        3,247,123,0,266,267,5,47,0,0,267,268,3,249,124,0,268,2,1,0,0,0,269,
        270,7,0,0,0,270,271,1,0,0,0,271,272,6,1,0,0,272,4,1,0,0,0,273,274,
        5,91,0,0,274,6,1,0,0,0,275,276,5,93,0,0,276,8,1,0,0,0,277,278,5,
        40,0,0,278,10,1,0,0,0,279,280,5,41,0,0,280,12,1,0,0,0,281,282,5,
        123,0,0,282,14,1,0,0,0,283,284,5,125,0,0,284,16,1,0,0,0,285,286,
        5,59,0,0,286,18,1,0,0,0,287,288,5,44,0,0,288,20,1,0,0,0,289,290,
        5,61,0,0,290,22,1,0,0,0,291,292,5,63,0,0,292,24,1,0,0,0,293,294,
        5,58,0,0,294,26,1,0,0,0,295,296,5,46,0,0,296,28,1,0,0,0,297,298,
        5,43,0,0,298,299,5,43,0,0,299,30,1,0,0,0,300,301,5,45,0,0,301,302,
        5,45,0,0,302,32,1,0,0,0,303,304,5,43,0,0,304,34,1,0,0,0,305,306,
        5,45,0,0,306,36,1,0,0,0,307,308,5,126,0,0,308,38,1,0,0,0,309,310,
        5,33,0,0,310,40,1,0,0,0,311,312,5,42,0,0,312,42,1,0,0,0,313,314,
        5,47,0,0,314,44,1,0,0,0,315,316,5,37,0,0,316,46,1,0,0,0,317,318,
        5,62,0,0,318,319,5,62,0,0,319,48,1,0,0,0,320,321,5,60,0,0,321,322,
        5,60,0,0,322,50,1,0,0,0,323,324,5,62,0,0,324,325,5,62,0,0,325,326,
        5,62,0,0,326,52,1,0,0,0,327,328,5,60,0,0,328,54,1,0,0,0,329,330,
        5,62,0,0,330,56,1,0,0,0,331,332,5,60,0,0,332,333,5,61,0,0,333,58,
        1,0,0,0,334,335,5,62,0,0,335,336,5,61,0,0,336,60,1,0,0,0,337,338,
        5,61,0,0,338,339,5,61,0,0,339,62,1,0,0,0,340,341,5,33,0,0,341,342,
        5,61,0,0,342,64,1,0,0,0,343,344,5,61,0,0,344,345,5,61,0,0,345,346,
        5,61,0,0,346,66,1,0,0,0,347,348,5,33,0,0,348,349,5,61,0,0,349,350,
        5,61,0,0,350,68,1,0,0,0,351,352,5,38,0,0,352,70,1,0,0,0,353,354,
        5,94,0,0,354,72,1,0,0,0,355,356,5,124,0,0,356,74,1,0,0,0,357,358,
        5,38,0,0,358,359,5,38,0,0,359,76,1,0,0,0,360,361,5,124,0,0,361,362,
        5,124,0,0,362,78,1,0,0,0,363,364,5,42,0,0,364,365,5,61,0,0,365,80,
        1,0,0,0,366,367,5,47,0,0,367,368,5,61,0,0,368,82,1,0,0,0,369,370,
        5,37,0,0,370,371,5,61,0,0,371,84,1,0,0,0,372,373,5,43,0,0,373,374,
        5,61,0,0,374,86,1,0,0,0,375,376,5,45,0,0,376,377,5,61,0,0,377,88,
        1,0,0,0,378,379,5,60,0,0,379,380,5,60,0,0,380,381,5,61,0,0,381,90,
        1,0,0,0,382,383,5,62,0,0,383,384,5,62,0,0,384,385,5,61,0,0,385,92,
        1,0,0,0,386,387,5,62,0,0,387,388,5,62,0,0,388,389,5,62,0,0,389,390,
        5,61,0,0,390,94,1,0,0,0,391,392,5,38,0,0,392,393,5,61,0,0,393,96,
        1,0,0,0,394,395,5,94,0,0,395,396,5,61,0,0,396,98,1,0,0,0,397,398,
        5,124,0,0,398,399,5,61,0,0,399,100,1,0,0,0,400,401,5,110,0,0,401,
        402,5,117,0,0,402,403,5,108,0,0,403,404,5,108,0,0,404,102,1,0,0,
        0,405,406,5,116,0,0,406,407,5,114,0,0,407,408,5,117,0,0,408,415,
        5,101,0,0,409,410,5,102,0,0,410,411,5,97,0,0,411,412,5,108,0,0,412,
        413,5,115,0,0,413,415,5,101,0,0,414,405,1,0,0,0,414,409,1,0,0,0,
        415,104,1,0,0,0,416,417,3,235,117,0,417,421,5,46,0,0,418,420,3,229,
        114,0,419,418,1,0,0,0,420,423,1,0,0,0,421,419,1,0,0,0,421,422,1,
        0,0,0,422,425,1,0,0,0,423,421,1,0,0,0,424,426,3,237,118,0,425,424,
        1,0,0,0,425,426,1,0,0,0,426,441,1,0,0,0,427,429,5,46,0,0,428,430,
        3,229,114,0,429,428,1,0,0,0,430,431,1,0,0,0,431,429,1,0,0,0,431,
        432,1,0,0,0,432,434,1,0,0,0,433,435,3,237,118,0,434,433,1,0,0,0,
        434,435,1,0,0,0,435,441,1,0,0,0,436,438,3,235,117,0,437,439,3,237,
        118,0,438,437,1,0,0,0,438,439,1,0,0,0,439,441,1,0,0,0,440,416,1,
        0,0,0,440,427,1,0,0,0,440,436,1,0,0,0,441,106,1,0,0,0,442,443,5,
        48,0,0,443,445,7,1,0,0,444,446,3,231,115,0,445,444,1,0,0,0,446,447,
        1,0,0,0,447,445,1,0,0,0,447,448,1,0,0,0,448,108,1,0,0,0,449,450,
        4,54,1,0,450,452,5,48,0,0,451,453,3,233,116,0,452,451,1,0,0,0,453,
        454,1,0,0,0,454,452,1,0,0,0,454,455,1,0,0,0,455,110,1,0,0,0,456,
        457,5,98,0,0,457,458,5,114,0,0,458,459,5,101,0,0,459,460,5,97,0,
        0,460,461,5,107,0,0,461,112,1,0,0,0,462,463,5,100,0,0,463,464,5,
        111,0,0,464,114,1,0,0,0,465,466,5,105,0,0,466,467,5,110,0,0,467,
        468,5,115,0,0,468,469,5,116,0,0,469,470,5,97,0,0,470,471,5,110,0,
        0,471,472,5,99,0,0,472,473,5,101,0,0,473,474,5,111,0,0,474,475,5,
        102,0,0,475,116,1,0,0,0,476,477,5,116,0,0,477,478,5,121,0,0,478,
        479,5,112,0,0,479,480,5,101,0,0,480,481,5,111,0,0,481,482,5,102,
        0,0,482,118,1,0,0,0,483,484,5,99,0,0,484,485,5,97,0,0,485,486,5,
        115,0,0,486,487,5,101,0,0,487,120,1,0,0,0,488,489,5,101,0,0,489,
        490,5,108,0,0,490,491,5,115,0,0,491,492,5,101,0,0,492,122,1,0,0,
        0,493,494,5,110,0,0,494,495,5,101,0,0,495,496,5,119,0,0,496,124,
        1,0,0,0,497,498,5,118,0,0,498,499,5,97,0,0,499,500,5,114,0,0,500,
        126,1,0,0,0,501,502,5,99,0,0,502,503,5,97,0,0,503,504,5,116,0,0,
        504,505,5,99,0,0,505,506,5,104,0,0,506,128,1,0,0,0,507,508,5,102,
        0,0,508,509,5,105,0,0,509,510,5,110,0,0,510,511,5,97,0,0,511,512,
        5,108,0,0,512,513,5,108,0,0,513,514,5,121,0,0,514,130,1,0,0,0,515,
        516,5,114,0,0,516,517,5,101,0,0,517,518,5,116,0,0,518,519,5,117,
        0,0,519,520,5,114,0,0,520,521,5,110,0,0,521,132,1,0,0,0,522,523,
        5,118,0,0,523,524,5,111,0,0,524,525,5,105,0,0,525,526,5,100,0,0,
        526,134,1,0,0,0,527,528,5,99,0,0,528,529,5,111,0,0,529,530,5,110,
        0,0,530,531,5,116,0,0,531,532,5,105,0,0,532,533,5,110,0,0,533,534,
        5,117,0,0,534,535,5,101,0,0,535,136,1,0,0,0,536,537,5,102,0,0,537,
        538,5,111,0,0,538,539,5,114,0,0,539,138,1,0,0,0,540,541,5,115,0,
        0,541,542,5,119,0,0,542,543,5,105,0,0,543,544,5,116,0,0,544,545,
        5,99,0,0,545,546,5,104,0,0,546,140,1,0,0,0,547,548,5,119,0,0,548,
        549,5,104,0,0,549,550,5,105,0,0,550,551,5,108,0,0,551,552,5,101,
        0,0,552,142,1,0,0,0,553,554,5,100,0,0,554,555,5,101,0,0,555,556,
        5,98,0,0,556,557,5,117,0,0,557,558,5,103,0,0,558,559,5,103,0,0,559,
        560,5,101,0,0,560,561,5,114,0,0,561,144,1,0,0,0,562,563,5,102,0,
        0,563,564,5,117,0,0,564,565,5,110,0,0,565,566,5,99,0,0,566,567,5,
        116,0,0,567,568,5,105,0,0,568,569,5,111,0,0,569,570,5,110,0,0,570,
        146,1,0,0,0,571,572,5,116,0,0,572,573,5,104,0,0,573,574,5,105,0,
        0,574,575,5,115,0,0,575,148,1,0,0,0,576,577,5,119,0,0,577,578,5,
        105,0,0,578,579,5,116,0,0,579,580,5,104,0,0,580,150,1,0,0,0,581,
        582,5,100,0,0,582,583,5,101,0,0,583,584,5,102,0,0,584,585,5,97,0,
        0,585,586,5,117,0,0,586,587,5,108,0,0,587,588,5,116,0,0,588,152,
        1,0,0,0,589,590,5,105,0,0,590,591,5,102,0,0,591,154,1,0,0,0,592,
        593,5,116,0,0,593,594,5,104,0,0,594,595,5,114,0,0,595,596,5,111,
        0,0,596,597,5,119,0,0,597,156,1,0,0,0,598,599,5,100,0,0,599,600,
        5,101,0,0,600,601,5,108,0,0,601,602,5,101,0,0,602,603,5,116,0,0,
        603,604,5,101,0,0,604,158,1,0,0,0,605,606,5,105,0,0,606,607,5,110,
        0,0,607,160,1,0,0,0,608,609,5,116,0,0,609,610,5,114,0,0,610,611,
        5,121,0,0,611,162,1,0,0,0,612,613,5,99,0,0,613,614,5,108,0,0,614,
        615,5,97,0,0,615,616,5,115,0,0,616,617,5,115,0,0,617,164,1,0,0,0,
        618,619,5,101,0,0,619,620,5,110,0,0,620,621,5,117,0,0,621,622,5,
        109,0,0,622,166,1,0,0,0,623,624,5,101,0,0,624,625,5,120,0,0,625,
        626,5,116,0,0,626,627,5,101,0,0,627,628,5,110,0,0,628,629,5,100,
        0,0,629,630,5,115,0,0,630,168,1,0,0,0,631,632,5,115,0,0,632,633,
        5,117,0,0,633,634,5,112,0,0,634,635,5,101,0,0,635,636,5,114,0,0,
        636,170,1,0,0,0,637,638,5,99,0,0,638,639,5,111,0,0,639,640,5,110,
        0,0,640,641,5,115,0,0,641,642,5,116,0,0,642,172,1,0,0,0,643,644,
        5,101,0,0,644,645,5,120,0,0,645,646,5,112,0,0,646,647,5,111,0,0,
        647,648,5,114,0,0,648,649,5,116,0,0,649,174,1,0,0,0,650,651,5,105,
        0,0,651,652,5,109,0,0,652,653,5,112,0,0,653,654,5,111,0,0,654,655,
        5,114,0,0,655,656,5,116,0,0,656,176,1,0,0,0,657,658,4,88,2,0,658,
        659,5,105,0,0,659,660,5,109,0,0,660,661,5,112,0,0,661,662,5,108,
        0,0,662,663,5,101,0,0,663,664,5,109,0,0,664,665,5,101,0,0,665,666,
        5,110,0,0,666,667,5,116,0,0,667,668,5,115,0,0,668,178,1,0,0,0,669,
        670,4,89,3,0,670,671,5,108,0,0,671,672,5,101,0,0,672,673,5,116,0,
        0,673,180,1,0,0,0,674,675,4,90,4,0,675,676,5,112,0,0,676,677,5,114,
        0,0,677,678,5,105,0,0,678,679,5,118,0,0,679,680,5,97,0,0,680,681,
        5,116,0,0,681,682,5,101,0,0,682,182,1,0,0,0,683,684,4,91,5,0,684,
        685,5,112,0,0,685,686,5,117,0,0,686,687,5,98,0,0,687,688,5,108,0,
        0,688,689,5,105,0,0,689,690,5,99,0,0,690,184,1,0,0,0,691,692,4,92,
        6,0,692,693,5,105,0,0,693,694,5,110,0,0,694,695,5,116,0,0,695,696,
        5,101,0,0,696,697,5,114,0,0,697,698,5,102,0,0,698,699,5,97,0,0,699,
        700,5,99,0,0,700,701,5,101,0,0,701,186,1,0,0,0,702,703,4,93,7,0,
        703,704,5,112,0,0,704,705,5,97,0,0,705,706,5,99,0,0,706,707,5,107,
        0,0,707,708,5,97,0,0,708,709,5,103,0,0,709,710,5,101,0,0,710,188,
        1,0,0,0,711,712,4,94,8,0,712,713,5,112,0,0,713,714,5,114,0,0,714,
        715,5,111,0,0,715,716,5,116,0,0,716,717,5,101,0,0,717,718,5,99,0,
        0,718,719,5,116,0,0,719,720,5,101,0,0,720,721,5,100,0,0,721,190,
        1,0,0,0,722,723,4,95,9,0,723,724,5,115,0,0,724,725,5,116,0,0,725,
        726,5,97,0,0,726,727,5,116,0,0,727,728,5,105,0,0,728,729,5,99,0,
        0,729,192,1,0,0,0,730,731,4,96,10,0,731,732,5,121,0,0,732,733,5,
        105,0,0,733,734,5,101,0,0,734,735,5,108,0,0,735,736,5,100,0,0,736,
        194,1,0,0,0,737,741,3,239,119,0,738,740,3,241,120,0,739,738,1,0,
        0,0,740,743,1,0,0,0,741,739,1,0,0,0,741,742,1,0,0,0,742,196,1,0,
        0,0,743,741,1,0,0,0,744,748,5,34,0,0,745,747,3,207,103,0,746,745,
        1,0,0,0,747,750,1,0,0,0,748,746,1,0,0,0,748,749,1,0,0,0,749,751,
        1,0,0,0,750,748,1,0,0,0,751,761,5,34,0,0,752,756,5,39,0,0,753,755,
        3,209,104,0,754,753,1,0,0,0,755,758,1,0,0,0,756,754,1,0,0,0,756,
        757,1,0,0,0,757,759,1,0,0,0,758,756,1,0,0,0,759,761,5,39,0,0,760,
        744,1,0,0,0,760,752,1,0,0,0,761,198,1,0,0,0,762,764,7,2,0,0,763,
        762,1,0,0,0,764,765,1,0,0,0,765,763,1,0,0,0,765,766,1,0,0,0,766,
        767,1,0,0,0,767,768,6,99,0,0,768,200,1,0,0,0,769,770,5,47,0,0,770,
        771,5,42,0,0,771,775,1,0,0,0,772,774,9,0,0,0,773,772,1,0,0,0,774,
        777,1,0,0,0,775,776,1,0,0,0,775,773,1,0,0,0,776,778,1,0,0,0,777,
        775,1,0,0,0,778,779,5,42,0,0,779,780,5,47,0,0,780,781,1,0,0,0,781,
        782,6,100,0,0,782,202,1,0,0,0,783,784,5,47,0,0,784,785,5,47,0,0,
        785,789,1,0,0,0,786,788,8,0,0,0,787,786,1,0,0,0,788,791,1,0,0,0,
        789,787,1,0,0,0,789,790,1,0,0,0,790,792,1,0,0,0,791,789,1,0,0,0,
        792,793,6,101,0,0,793,204,1,0,0,0,794,795,9,0,0,0,795,206,1,0,0,
        0,796,801,8,3,0,0,797,798,5,92,0,0,798,801,3,211,105,0,799,801,3,
        225,112,0,800,796,1,0,0,0,800,797,1,0,0,0,800,799,1,0,0,0,801,208,
        1,0,0,0,802,807,8,4,0,0,803,804,5,92,0,0,804,807,3,211,105,0,805,
        807,3,225,112,0,806,802,1,0,0,0,806,803,1,0,0,0,806,805,1,0,0,0,
        807,210,1,0,0,0,808,813,3,213,106,0,809,813,5,48,0,0,810,813,3,215,
        107,0,811,813,3,217,108,0,812,808,1,0,0,0,812,809,1,0,0,0,812,810,
        1,0,0,0,812,811,1,0,0,0,813,212,1,0,0,0,814,817,3,219,109,0,815,
        817,3,221,110,0,816,814,1,0,0,0,816,815,1,0,0,0,817,214,1,0,0,0,
        818,819,5,120,0,0,819,820,3,231,115,0,820,821,3,231,115,0,821,216,
        1,0,0,0,822,823,5,117,0,0,823,824,3,231,115,0,824,825,3,231,115,
        0,825,826,3,231,115,0,826,827,3,231,115,0,827,218,1,0,0,0,828,829,
        7,5,0,0,829,220,1,0,0,0,830,831,8,6,0,0,831,222,1,0,0,0,832,836,
        3,219,109,0,833,836,3,229,114,0,834,836,7,7,0,0,835,832,1,0,0,0,
        835,833,1,0,0,0,835,834,1,0,0,0,836,224,1,0,0,0,837,838,5,92,0,0,
        838,839,3,227,113,0,839,226,1,0,0,0,840,841,5,13,0,0,841,844,5,10,
        0,0,842,844,3,3,1,0,843,840,1,0,0,0,843,842,1,0,0,0,844,228,1,0,
        0,0,845,846,7,8,0,0,846,230,1,0,0,0,847,848,7,9,0,0,848,232,1,0,
        0,0,849,850,7,10,0,0,850,234,1,0,0,0,851,860,5,48,0,0,852,856,7,
        11,0,0,853,855,3,229,114,0,854,853,1,0,0,0,855,858,1,0,0,0,856,854,
        1,0,0,0,856,857,1,0,0,0,857,860,1,0,0,0,858,856,1,0,0,0,859,851,
        1,0,0,0,859,852,1,0,0,0,860,236,1,0,0,0,861,863,7,12,0,0,862,864,
        7,13,0,0,863,862,1,0,0,0,863,864,1,0,0,0,864,866,1,0,0,0,865,867,
        3,229,114,0,866,865,1,0,0,0,867,868,1,0,0,0,868,866,1,0,0,0,868,
        869,1,0,0,0,869,238,1,0,0,0,870,874,7,14,0,0,871,872,5,92,0,0,872,
        874,3,217,108,0,873,870,1,0,0,0,873,871,1,0,0,0,874,240,1,0,0,0,
        875,880,3,239,119,0,876,880,7,15,0,0,877,880,3,243,121,0,878,880,
        3,245,122,0,879,875,1,0,0,0,879,876,1,0,0,0,879,877,1,0,0,0,879,
        878,1,0,0,0,880,242,1,0,0,0,881,882,5,8204,0,0,882,244,1,0,0,0,883,
        884,5,8205,0,0,884,246,1,0,0,0,885,889,3,251,125,0,886,888,3,253,
        126,0,887,886,1,0,0,0,888,891,1,0,0,0,889,887,1,0,0,0,889,890,1,
        0,0,0,890,248,1,0,0,0,891,889,1,0,0,0,892,894,3,241,120,0,893,892,
        1,0,0,0,894,897,1,0,0,0,895,893,1,0,0,0,895,896,1,0,0,0,896,250,
        1,0,0,0,897,895,1,0,0,0,898,902,8,16,0,0,899,902,3,257,128,0,900,
        902,3,259,129,0,901,898,1,0,0,0,901,899,1,0,0,0,901,900,1,0,0,0,
        902,252,1,0,0,0,903,907,8,17,0,0,904,907,3,257,128,0,905,907,3,259,
        129,0,906,903,1,0,0,0,906,904,1,0,0,0,906,905,1,0,0,0,907,254,1,
        0,0,0,908,909,8,0,0,0,909,256,1,0,0,0,910,911,5,92,0,0,911,912,3,
        255,127,0,912,258,1,0,0,0,913,917,5,91,0,0,914,916,3,261,130,0,915,
        914,1,0,0,0,916,919,1,0,0,0,917,915,1,0,0,0,917,918,1,0,0,0,918,
        920,1,0,0,0,919,917,1,0,0,0,920,921,5,93,0,0,921,260,1,0,0,0,922,
        925,8,18,0,0,923,925,3,257,128,0,924,922,1,0,0,0,924,923,1,0,0,0,
        925,262,1,0,0,0,35,0,414,421,425,431,434,438,440,447,454,741,748,
        756,760,765,775,789,800,806,812,816,835,843,856,859,863,868,873,
        879,889,895,901,906,917,924,1,0,1,0
    ]

class ECMAScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    RegularExpressionLiteral = 1
    LineTerminator = 2
    OpenBracket = 3
    CloseBracket = 4
    OpenParen = 5
    CloseParen = 6
    OpenBrace = 7
    CloseBrace = 8
    SemiColon = 9
    Comma = 10
    Assign = 11
    QuestionMark = 12
    Colon = 13
    Dot = 14
    PlusPlus = 15
    MinusMinus = 16
    Plus = 17
    Minus = 18
    BitNot = 19
    Not = 20
    Multiply = 21
    Divide = 22
    Modulus = 23
    RightShiftArithmetic = 24
    LeftShiftArithmetic = 25
    RightShiftLogical = 26
    LessThan = 27
    MoreThan = 28
    LessThanEquals = 29
    GreaterThanEquals = 30
    Equals = 31
    NotEquals = 32
    IdentityEquals = 33
    IdentityNotEquals = 34
    BitAnd = 35
    BitXOr = 36
    BitOr = 37
    And = 38
    Or = 39
    MultiplyAssign = 40
    DivideAssign = 41
    ModulusAssign = 42
    PlusAssign = 43
    MinusAssign = 44
    LeftShiftArithmeticAssign = 45
    RightShiftArithmeticAssign = 46
    RightShiftLogicalAssign = 47
    BitAndAssign = 48
    BitXorAssign = 49
    BitOrAssign = 50
    NullLiteral = 51
    BooleanLiteral = 52
    DecimalLiteral = 53
    HexIntegerLiteral = 54
    OctalIntegerLiteral = 55
    Break = 56
    Do = 57
    Instanceof = 58
    Typeof = 59
    Case = 60
    Else = 61
    New = 62
    Var = 63
    Catch = 64
    Finally = 65
    Return = 66
    Void = 67
    Continue = 68
    For = 69
    Switch = 70
    While = 71
    Debugger = 72
    Function = 73
    This = 74
    With = 75
    Default = 76
    If = 77
    Throw = 78
    Delete = 79
    In = 80
    Try = 81
    Class = 82
    Enum = 83
    Extends = 84
    Super = 85
    Const = 86
    Export = 87
    Import = 88
    Implements = 89
    Let = 90
    Private = 91
    Public = 92
    Interface = 93
    Package = 94
    Protected = 95
    Static = 96
    Yield = 97
    Identifier = 98
    StringLiteral = 99
    WhiteSpaces = 100
    MultiLineComment = 101
    SingleLineComment = 102
    UnexpectedCharacter = 103

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'('", "')'", "'{'", "'}'", "';'", "','", "'='", 
            "'?'", "':'", "'.'", "'++'", "'--'", "'+'", "'-'", "'~'", "'!'", 
            "'*'", "'/'", "'%'", "'>>'", "'<<'", "'>>>'", "'<'", "'>'", 
            "'<='", "'>='", "'=='", "'!='", "'==='", "'!=='", "'&'", "'^'", 
            "'|'", "'&&'", "'||'", "'*='", "'/='", "'%='", "'+='", "'-='", 
            "'<<='", "'>>='", "'>>>='", "'&='", "'^='", "'|='", "'null'", 
            "'break'", "'do'", "'instanceof'", "'typeof'", "'case'", "'else'", 
            "'new'", "'var'", "'catch'", "'finally'", "'return'", "'void'", 
            "'continue'", "'for'", "'switch'", "'while'", "'debugger'", 
            "'function'", "'this'", "'with'", "'default'", "'if'", "'throw'", 
            "'delete'", "'in'", "'try'", "'class'", "'enum'", "'extends'", 
            "'super'", "'const'", "'export'", "'import'" ]

    symbolicNames = [ "<INVALID>",
            "RegularExpressionLiteral", "LineTerminator", "OpenBracket", 
            "CloseBracket", "OpenParen", "CloseParen", "OpenBrace", "CloseBrace", 
            "SemiColon", "Comma", "Assign", "QuestionMark", "Colon", "Dot", 
            "PlusPlus", "MinusMinus", "Plus", "Minus", "BitNot", "Not", 
            "Multiply", "Divide", "Modulus", "RightShiftArithmetic", "LeftShiftArithmetic", 
            "RightShiftLogical", "LessThan", "MoreThan", "LessThanEquals", 
            "GreaterThanEquals", "Equals", "NotEquals", "IdentityEquals", 
            "IdentityNotEquals", "BitAnd", "BitXOr", "BitOr", "And", "Or", 
            "MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign", 
            "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
            "RightShiftLogicalAssign", "BitAndAssign", "BitXorAssign", "BitOrAssign", 
            "NullLiteral", "BooleanLiteral", "DecimalLiteral", "HexIntegerLiteral", 
            "OctalIntegerLiteral", "Break", "Do", "Instanceof", "Typeof", 
            "Case", "Else", "New", "Var", "Catch", "Finally", "Return", 
            "Void", "Continue", "For", "Switch", "While", "Debugger", "Function", 
            "This", "With", "Default", "If", "Throw", "Delete", "In", "Try", 
            "Class", "Enum", "Extends", "Super", "Const", "Export", "Import", 
            "Implements", "Let", "Private", "Public", "Interface", "Package", 
            "Protected", "Static", "Yield", "Identifier", "StringLiteral", 
            "WhiteSpaces", "MultiLineComment", "SingleLineComment", "UnexpectedCharacter" ]

    ruleNames = [ "RegularExpressionLiteral", "LineTerminator", "OpenBracket", 
                  "CloseBracket", "OpenParen", "CloseParen", "OpenBrace", 
                  "CloseBrace", "SemiColon", "Comma", "Assign", "QuestionMark", 
                  "Colon", "Dot", "PlusPlus", "MinusMinus", "Plus", "Minus", 
                  "BitNot", "Not", "Multiply", "Divide", "Modulus", "RightShiftArithmetic", 
                  "LeftShiftArithmetic", "RightShiftLogical", "LessThan", 
                  "MoreThan", "LessThanEquals", "GreaterThanEquals", "Equals", 
                  "NotEquals", "IdentityEquals", "IdentityNotEquals", "BitAnd", 
                  "BitXOr", "BitOr", "And", "Or", "MultiplyAssign", "DivideAssign", 
                  "ModulusAssign", "PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", 
                  "RightShiftArithmeticAssign", "RightShiftLogicalAssign", 
                  "BitAndAssign", "BitXorAssign", "BitOrAssign", "NullLiteral", 
                  "BooleanLiteral", "DecimalLiteral", "HexIntegerLiteral", 
                  "OctalIntegerLiteral", "Break", "Do", "Instanceof", "Typeof", 
                  "Case", "Else", "New", "Var", "Catch", "Finally", "Return", 
                  "Void", "Continue", "For", "Switch", "While", "Debugger", 
                  "Function", "This", "With", "Default", "If", "Throw", 
                  "Delete", "In", "Try", "Class", "Enum", "Extends", "Super", 
                  "Const", "Export", "Import", "Implements", "Let", "Private", 
                  "Public", "Interface", "Package", "Protected", "Static", 
                  "Yield", "Identifier", "StringLiteral", "WhiteSpaces", 
                  "MultiLineComment", "SingleLineComment", "UnexpectedCharacter", 
                  "DoubleStringCharacter", "SingleStringCharacter", "EscapeSequence", 
                  "CharacterEscapeSequence", "HexEscapeSequence", "UnicodeEscapeSequence", 
                  "SingleEscapeCharacter", "NonEscapeCharacter", "EscapeCharacter", 
                  "LineContinuation", "LineTerminatorSequence", "DecimalDigit", 
                  "HexDigit", "OctalDigit", "DecimalIntegerLiteral", "ExponentPart", 
                  "IdentifierStart", "IdentifierPart", "ZWNJ", "ZWJ", "RegularExpressionBody", 
                  "RegularExpressionFlags", "RegularExpressionFirstChar", 
                  "RegularExpressionChar", "RegularExpressionNonTerminator", 
                  "RegularExpressionBackslashSequence", "RegularExpressionClass", 
                  "RegularExpressionClassChar" ]

    grammarFileName = "ECMAScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


        # A flag indicating if the lexer should operate in strict mode
        # When set to true, FutureReservedWords are tokenized, when false,
        # an octal literal can be tokenized
        self._strictMode = True

        # The most recently produced token.
        self._lastToken = None

    @property
    def strictMode(self):
        """Returns `True` iff the lexer operates in strict mode.

        Returns:
            `True` iff the lexer operates in strict mode.
        """
        return self._strictMode

    @strictMode.setter
    def strictMode(self, strictMode):
        """Sets whether the lexer operates in strict mode or not.

        Args:
            strictMode (bool): the flag indicating the lexer operates in strict
            mode or not.
        """
        self._strictMode = strictMode

    def nextToken(self):
        """Return the next token from the character stream and records this last
        token in case it resides on the default channel. This recorded token
        is used to determine when the lexer could possible match a regex
        literal.

        Returns:
            the next token from the character stream.
        """
        # Get the next token.
        next = super(ECMAScriptLexer, self).nextToken()

        if next.channel == Token.DEFAULT_CHANNEL:
            # Keep track of the last token on the default channel.
            self._lastToken = next

        return next

    def isRegexPossible(self):
        """Returns `True` iff the lexer can match a regex literal.

        Returns:
            `True` iff the lexer can match a regex literal.
        """
        if self._lastToken is None:
            # No token has been produced yet: at the start of the input,
            # no division is possible, so a regex literal _is_ possible.
            return True

        if self._lastToken.type == ECMAScriptLexer.Identifier or \
                self._lastToken.type == ECMAScriptLexer.NullLiteral or \
                self._lastToken.type == ECMAScriptLexer.BooleanLiteral or \
                self._lastToken.type == ECMAScriptLexer.This or \
                self._lastToken.type == ECMAScriptLexer.CloseBracket or \
                self._lastToken.type == ECMAScriptLexer.CloseParen or \
                self._lastToken.type == ECMAScriptLexer.OctalIntegerLiteral or \
                self._lastToken.type == ECMAScriptLexer.DecimalLiteral or \
                self._lastToken.type == ECMAScriptLexer.HexIntegerLiteral or \
                self._lastToken.type == ECMAScriptLexer.StringLiteral or \
                self._lastToken.type == ECMAScriptLexer.PlusPlus or \
                self._lastToken.type == ECMAScriptLexer.MinusMinus:
            # After any of the tokens above, no regex literal can follow.
            return False
        else:
            # In all other cases, a regex literal _is_ possible.
            return True


    def sempred(self, localctx:RuleContext, ruleIndex:int, predIndex:int):
        if self._predicates is None:
            preds = dict()
            preds[0] = self.RegularExpressionLiteral_sempred
            preds[54] = self.OctalIntegerLiteral_sempred
            preds[88] = self.Implements_sempred
            preds[89] = self.Let_sempred
            preds[90] = self.Private_sempred
            preds[91] = self.Public_sempred
            preds[92] = self.Interface_sempred
            preds[93] = self.Package_sempred
            preds[94] = self.Protected_sempred
            preds[95] = self.Static_sempred
            preds[96] = self.Yield_sempred
            self._predicates = preds
        pred = self._predicates.get(ruleIndex, None)
        if pred is not None:
            return pred(localctx, predIndex)
        else:
            raise Exception("No registered predicate for:" + str(ruleIndex))

    def RegularExpressionLiteral_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 0:
                return self.isRegexPossible()
         

    def OctalIntegerLiteral_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 1:
                return not self.strictMode
         

    def Implements_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 2:
                return self.strictMode
         

    def Let_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 3:
                return self.strictMode
         

    def Private_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 4:
                return self.strictMode
         

    def Public_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 5:
                return self.strictMode
         

    def Interface_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 6:
                return self.strictMode
         

    def Package_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 7:
                return self.strictMode
         

    def Protected_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 8:
                return self.strictMode
         

    def Static_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 9:
                return self.strictMode
         

    def Yield_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 10:
                return self.strictMode
         


