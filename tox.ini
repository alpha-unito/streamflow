[tox]
envlist =
  bandit
  lint
  py3.{9,10,11,12,13}-unit
skip_missing_interpreters = True

[pytest]
asyncio_default_fixture_loop_scope = module
asyncio_default_test_loop_scope = session
asyncio_mode = strict
testpaths = tests

[testenv]
allowlist_externals = make
commands_pre =
  py3.{9,10,11,12,13}-unit: python -m pip install -U pip setuptools wheel
commands =
  py3.{9,10,11,12,13}-unit: make coverage-report coverage.xml PYTEST_EXTRA={posargs}
deps =
  py3.{9,10,11,12,13}-unit: -rrequirements.txt
  py3.{9,10,11,12,13}-unit: -rreport-requirements.txt
  py3.{9,10,11,12,13}-unit: -rtest-requirements.txt
description =
  py3.{9,10,11,12,13}-unit: Run the unit tests
passenv =
  CI
  GITHUB_*
setenv =
  py3.{9,10,11,12,13}-unit: LC_ALL = C.UTF-8

[testenv:bandit]
commands = bandit -r streamflow
deps =
  -rrequirements.txt
  -rbandit-requirements.txt
description = Search for common security issues
passenv =
  CI
  GITHUB_*

[testenv:lint]
allowlist_externals = make
commands = make flake8 format-check codespell-check pyupgrade
deps =
  -rrequirements.txt
  -rlint-requirements.txt
description = Lint the Python code